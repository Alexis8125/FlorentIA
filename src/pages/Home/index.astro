---
import "../../styles/global.css";
import Menu from "../../components/Menu.astro";
import Progress from "../../components/Progress.astro";
---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/svg+xml" href="../../../public/logo-fondo.jpg" />
    <title>¡FlorentIA! - Home Student</title>
</head>
<body>
    <div class="container">
        <div class="menu">
          <Menu />
        </div>
        <div class="information">
          <div class="welcome">
            <div class="child-image">
              <img src="/logo-fondo.jpg" alt="Logo" />
            </div>
            <h1 id="welcome-message">Cargando…</h1>
            <p>Tus Avances</p>
          </div>
    
          <div class="advance-content" id="advance-content">
            <!-- Aquí se cargan los temas dinámicamente -->
          </div>
        </div>
      </div>
</body>

<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js";
    import { getFirestore, doc, getDoc } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-firestore.js";
    
    // Configurar Firebase
    const firebaseConfig = {
      apiKey: "...",
      authDomain: "florentia-f47b9.firebaseapp.com",
      projectId: "florentia-f47b9",
      storageBucket: "florentia-f47b9.appspot.com",
      messagingSenderId: "59886187087",
      appId: "1:59886187087:web:d274071e62e43f00b5b03a"
    };
    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);
    
    // Función principal
    (async () => {
      const code = localStorage.getItem("codigoEstudiante");
      const welcomeEl = document.getElementById("welcome-message");
      const advanceContent = document.querySelector(".advance-content");
    
      if (!code) {
        welcomeEl.textContent = "¡Bienvenido a FlorentIA!";
        return;
      }
    
      try {
        // Buscar usuario
        const userRef = doc(db, "users", code);
        const userSnap = await getDoc(userRef);
    
        if (!userSnap.exists()) {
          welcomeEl.textContent = "¡Bienvenido a FlorentIA!";
          return;
        }
    
        const userData = userSnap.data();
        const name = `${userData.firstName} ${userData.lastName}`;
        const course = userData.course; // ej: "702"
    
        welcomeEl.textContent = `¡Bienvenido, ${name}!`;
    
        // Detectar sexto o séptimo
        let gradeFolder = "";
        if (course.startsWith("6")) {
          gradeFolder = "sixth";
        } else if (course.startsWith("7")) {
          gradeFolder = "seventh";
        } else {
          gradeFolder = null;
        }
    
        if (!gradeFolder) {
          advanceContent.innerHTML = "<p>No se encontraron módulos para tu curso.</p>";
          return;
        }
    
        // Buscar módulos por grado
        const moduleRef = doc(db, "modules", "moduleId", gradeFolder, `module${capitalize(gradeFolder)}`);
        const moduleSnap = await getDoc(moduleRef);
    
        if (!moduleSnap.exists()) {
          advanceContent.innerHTML = "<p>No hay temas disponibles.</p>";
          return;
        }
    
        const moduleData = moduleSnap.data();
        const topics = moduleData.topics || [];
    
        // Limpiar antes de insertar
        advanceContent.innerHTML = "";
    
        // Mostrar cada tema
        // Mostrar cada tema junto con su barra de progreso real
        topics.forEach((topic, index) => {
  const progreso = moduleData.progress ? moduleData.progress[index] || 0 : 0;

  const card = document.createElement("div");
  card.classList.add("card-tema");
  card.innerHTML = `
    <h2>${topic}</h2>
    <p>${moduleData.subject}</p>
    <div class="circular-progress" style="--progress:${progreso}">
      <span>${progreso}%</span>
    </div>
  `;
  advanceContent.appendChild(card);
});


    
      } catch (error) {
        console.error("Error al cargar el estudiante o módulos:", error);
        welcomeEl.textContent = "¡Bienvenido a FlorentIA!";
      }
    
    })();
    
    function capitalize(str) {
      return str.charAt(0).toUpperCase() + str.slice(1);
    }
    </script>
    
</html>

<style>
    html, body {
        margin: 0;
        padding: 0;
        height: 100vh;
        width: 100vw;
        overflow: hidden;
        background-color: #FFFFF0;
        /* @apply w-screen h-screen m-0 p-0 overflow-hidden; */
    }

    .container {
        @apply flex h-screen bg-[#FFFFF0] w-full;
    }

    .menu {
        @apply w-[300px] h-full;
    }

    .information {
        @apply w-[1500px] flex-col h-full flex items-center justify-center;
}   


    .welcome {
        @apply w-full p-[10%] flex flex-col h-[50%] items-center justify-center text-[#333];
    }

    .welcome > h1{
        font-size: 28px;
        font-weight: 400
    }

    .welcome > p{
        font-size: 34px;
        margin-top: 15px;
        font-weight: 700
        margin-bottom: -24px;
    }

    .child-image {
        @apply w-[200px] h-[200px] flex flex-col rounded-full mb-[15px];
    }

    .child-image > img {
        @apply w-full h-full rounded-full;
    }

    .advance-content {
        @apply w-full h-[50%] p-[10%] flex items-center justify-center space-x-[24px] mt-[-120px];
    }

    .progress > h2{
        @apply h-[50%]  text-[30px]  items-end flex justify-center 
    }
    .progress > span{
        @apply h-[50%] text-[20px] justify-center flex items-start
    }

    .circular-progress {
  position: relative;
  width: 120px;
  height: 120px;
  border-radius: 50%;
  background: conic-gradient(
    #4d5bf9 calc(var(--progress) * 1%),
    #cadcff 0
  );
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 1.2em;
  color: #4d5bf9;
}

.circular-progress span {
  position: absolute;
}

</style>
