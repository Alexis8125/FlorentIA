---
import Activities from "../../components/Vue/Activities.astro";
import "../../styles/global.css";
import Menu from "../../components/Menu.astro";
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Actividades</title>
    </head>
    <body>
        <div class="page-container">
            <div class="menu">
                <Menu />
            </div>
            <div class="activities-section">
                <div class="section-header">
                    <h2 class="main-title">Mi Diario</h2>
                </div>

                <div class="activities-column">
                    <!-- Botón de Agregar Nota (más pequeño) -->
                    <a
                        href="/Diary/note"
                        class="activity-item special-card no-underline small-card"
                    >
                        <div class="icon-container">
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                class="icon"
                                viewBox="0 0 24 24"
                                fill="none"
                                stroke="#2c2c2c"
                                stroke-width="2"
                                stroke-linecap="round"
                                stroke-linejoin="round"
                            >
                                <path d="M12 5v14M5 12h14"></path>
                            </svg>
                        </div>
                        <h2>Agregar Nota</h2>
                    </a>

                    <!-- Wrapping notes with scrollbar -->
                    <div class="notes-wrapper">
                        <div id="notes-container" class="notes-grid"></div>
                    </div>

                    <!-- Botón Eliminar Todas al fondo centrado -->
                    <div class="delete-wrapper">
                        <button
                            type="button"
                            class="boton-eliminar"
                            onclick="clearAllNotes()"
                        >
                            Eliminar todas las notas
                        </button>
                    </div>
                </div>
            </div>
        </div>
        

        <!-- Firebase, Load and Delete Scripts -->
        <script type="module">
            // 1. Importaciones esenciales (usando CDN compatible)
            import { db } from "/src/scripts/firebaseConfig.js";
            import { renderNotes } from "/src/scripts/loadNotes.js";
            import { 
                collection, 
                getDocs, 
                deleteDoc, 
                doc 
            } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-firestore.js";
        
            // 2. Función para eliminar notas (mejorada)
            window.clearAllNotes = async function() {
                if (!confirm("¿Eliminar TODAS tus notas permanentemente?")) return;
                
                try {
                    const codigo = localStorage.getItem("codigoEstudiante");
                    if (!codigo) {
                        throw new Error("No se encontró el código del estudiante");
                    }
                    
                    // Referencia a la colección de notas del usuario
                    const notasRef = collection(db, "users", codigo, "notes");
                    const snapshot = await getDocs(notasRef);
                    
                    // Eliminar todas las notas en paralelo
                    const operaciones = snapshot.docs.map(nota => 
                        deleteDoc(doc(db, "users", codigo, "notes", nota.id))
                    );
                    
                    await Promise.all(operaciones);
                    alert("¡Todas las notas fueron eliminadas!");
                    await renderNotes(); // Actualizar la vista
                    
                } catch (error) {
                    console.error("Error al eliminar notas:", error);
                    alert("Ocurrió un error. Verifica la consola.");
                }
            };
        
            // 3. Carga inicial con manejo robusto
            document.addEventListener("DOMContentLoaded", async () => {
                try {
                    // Forzar recarga si viene de guardar una nota
                    const parametros = new URLSearchParams(window.location.search);
                    if (parametros.has('refresh')) {
                        console.log("Recargando notas...");
                        localStorage.removeItem("cacheNotas");
                    }
                    
                    // Verificar que el usuario esté "autenticado"
                    const codigo = localStorage.getItem("codigoEstudiante");
                    if (!codigo) {
                        console.warn("Usuario no identificado");
                        document.getElementById("notes-container").innerHTML = `
                            <p class="error">Inicia sesión para ver tus notas</p>
                        `;
                        return;
                    }
                    
                    // Cargar notas
                    await renderNotes();
                    
                } catch (error) {
                    console.error("Error grave al cargar:", error);
                    const contenedor = document.getElementById("notes-container");
                    if (contenedor) {
                        contenedor.innerHTML = `
                            <p class="error">
                                Error al cargar notas. 
                                <button onclick="location.reload()">Reintentar</button>
                            </p>
                        `;
                    }
                }
            });
        
            // Debug: Verificar conexión
            console.log("Firebase configurado correctamente");
            console.log("Código de estudiante:", localStorage.getItem("codigoEstudiante"));
        </script>

        <style>
            .page-container {
                @apply flex h-screen bg-[#FFFFF0] w-full;
            }

            .activities-section {
                @apply bg-[#FFFFF0] w-full;
            }

            .section-header {
                @apply justify-center items-center flex mt-[40px] mb-[20px];
            }
            .main-title {
                font-size: 48px;
                font-weight: 800;
                color: #184d6d;
            }

            .activities-column {
                display: flex;
                flex-direction: column;
                align-items: center;
                gap: 1rem;
                width: 100%;
            }

            .notes-wrapper {
                width: 100%;
                max-height: 60vh;
                overflow-y: auto;
            }

            .notes-grid {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
                gap: 1rem;
                justify-items: center;
            }

            .activity-item {
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                align-items: center;
                width: 160px;
                height: 160px;
                background-color: #a5c5aa;
                background-image: linear-gradient(
                        to right,
                        rgba(239, 133, 53, 0.3) 1px,
                        transparent 1px
                    ),
                    linear-gradient(
                        to bottom,
                        rgba(239, 133, 53, 0.3) 1px,
                        transparent 1px
                    );
                background-size: 20px 20px;
                border: 2px solid #ef8535;
                box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.2);
                position: relative;
                border-radius: 6px;
                padding: 0.5rem;
                transition:
                    transform 0.2s ease,
                    box-shadow 0.2s ease;
                text-decoration: none;
            }

            .activity-item:hover {
                transform: translateY(-4px);
                box-shadow: 6px 6px 14px rgba(0, 0, 0, 0.3);
            }

            .small-card {
                width: 120px;
                height: 120px;
            }

            .activity-item h2 {
                font-size: 16px;
                text-align: center;
                color: #2c2c2c;
                margin: 0;
                font-weight: 500;
                letter-spacing: 0.5px;
            }

            .small-text {
                font-size: 0.75rem;
                color: #2c2c2c;
                text-align: center;
                margin: 0;
            }

            .icon-container {
                display: flex;
                justify-content: center;
                align-items: center;
                height: 60%;
            }

            .icon {
                width: 30px;
                height: 30px;
                stroke: #2c2c2c;
            }

            .special-card {
                background-color: #c0f4ac;
            }

            .boton-eliminar {
                background-color: #ff5900;
                color: white;
                padding: 0.5rem 1rem;
                border: none;
                border-radius: 0.5rem;
                cursor: pointer;
                transition: background-color 0.2s;
            }

            .boton-eliminar:hover {
                background-color: #184d6d;
            }

            .delete-wrapper {
                width: 100%;
                display: flex;
                justify-content: center;
                margin-top: 1rem;
            }
        </style>
    </body>
</html>
