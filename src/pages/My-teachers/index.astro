---
import "../../styles/global.css";
import Menu from "../../components/Menu.astro";
---
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="icon" type="image/svg+xml" href="../../../public/logo-fondo.jpg" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"/>
    <title>Mis profesores</title>
</head>
<body>
    <div class="container">
        <div class="menu">
            <Menu></Menu>
        </div>
        <div class="information">
            <div class="section-title">
                <h2>Mis profesores</h2>
            </div>
            <div class="teacher-profile">
                <div class="teacher-card">
                    <img id="fotoProfesor" class="teacher-avatar" src="" alt="Foto de la profesor@">
                    <div class="teacher-details">
                        <h2 id="nombreProfesor">Profe</h2>
                        <h3 id="gradoProfesor">Inglés</h3>
                    </div>
                    <button class="profile-button">Ver perfil</button>
                </div>
            </div>            
            <div class="teacher-sections">
                <div class="teacher-card-section">
                    <h2>Mensajes del profesor</h2>
                    <div id="mensajes-container" class="mensajes-container">
                        <!-- Los mensajes se cargarán aquí dinámicamente -->
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="teacher-modal" class="modal">
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <div class="modal-header">
                <img id="modal-teacher-avatar" class="modal-avatar" src="" alt="Foto del profesor">
                <div class="modal-title">
                    <h2 id="modal-teacher-name"></h2>
                    <h3 id="modal-teacher-course"></h3>
                </div>
            </div>
            <div class="modal-body">
                <div class="modal-section">
                    <h4>Descripción</h4>
                    <p id="modal-teacher-description"></p>
                </div>
                <div class="modal-section">
                    <h4>Rol</h4>
                    <p id="modal-teacher-role"></p>
                </div>
            </div>
        </div>
    </div>
</body>
<script type="module">
 import { initializeApp } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-app.js";
    import { 
        getFirestore, 
        collection, 
        query, 
        where, 
        getDocs, 
        orderBy 
    } from "https://www.gstatic.com/firebasejs/10.8.0/firebase-firestore.js";

    const firebaseConfig = {
        apiKey: "AIzaSyCgq36r1pfgHplUt7-HSIY_qNJiEybaIJc",
        authDomain: "florentia-f47b9.firebaseapp.com",
        projectId: "florentia-f47b9",
        storageBucket: "florentia-f47b9.firebasestorage.app",
        messagingSenderId: "59886187087",
        appId: "1:59886187087:web:d274071e62e43f00b5b03a"
    };

    const app = initializeApp(firebaseConfig);
    const db = getFirestore(app);

    async function cargarMensajes() {
        const mensajesContainer = document.getElementById("mensajes-container");
        
        try {
            // Usa el mismo identificador que cargarProfesor()
            const codigoEstudiante = localStorage.getItem("codigoEstudiante");
            if (!codigoEstudiante) {
                throw new Error("No se encontró código de estudiante");
            }

            // 1. Obtener ID del estudiante (documento en Firestore)
            const studentQuery = query(
                collection(db, "users"),
                where("code", "==", codigoEstudiante)
            );
            const studentSnap = await getDocs(studentQuery);
            
            if (studentSnap.empty) {
                throw new Error("Estudiante no registrado");
            }
            
            const studentId = studentSnap.docs[0].id; // ID del documento Firestore

            // 2. Buscar mensajes
            const q = query(
                collection(db, "messages"),
                where("to", "==", studentId), // Usa el ID del documento, no el código
                orderBy("timestamp", "desc")
            );

            mensajesContainer.innerHTML = "<p class='loading'>Cargando mensajes...</p>";
            const querySnapshot = await getDocs(q);

            // 3. Mostrar resultados
            mensajesContainer.innerHTML = "";
            
            if (querySnapshot.empty) {
                mensajesContainer.innerHTML = "<p class='no-messages'>No tienes mensajes aún</p>";
                return;
            }

            // 4. Mostrar mensajes
            const nombreProfesor = document.getElementById("nombreProfesor").textContent;
            
            querySnapshot.forEach((doc) => {
                const msg = doc.data();
                const fecha = msg.timestamp?.toDate()?.toLocaleString('es-ES', {
                    day: '2-digit',
                    month: 'short',
                    hour: '2-digit',
                    minute: '2-digit'
                }) || "Fecha desconocida";

                mensajesContainer.innerHTML += `
                    <div class="mensaje">
                        <div class="mensaje-cabecera">
                            <strong>${nombreProfesor}</strong>
                            <span class="fecha">${fecha}</span>
                        </div>
                        <div class="mensaje-texto">${msg.message || "Sin contenido"}</div>
                    </div>
                `;
            });

        } catch (error) {
            console.error("Error en cargarMensajes():", error);
            mensajesContainer.innerHTML = `
                <p class="error">
                    Error al cargar mensajes: ${error.message}
                </p>
            `;
        }
    }

    async function cargarProfesor() {
    const codigoEstudiante = localStorage.getItem("codigoEstudiante");
  
    if (!codigoEstudiante) {
        window.location.href = "/login";
        return;
    }
  
    const studentQuery = query(
        collection(db, "users"),
        where("code", "==", codigoEstudiante)
    );
    const studentSnap = await getDocs(studentQuery);
  
    if (studentSnap.empty) {
        alert("No se encontró el estudiante");
        return;
    }
  
    const studentData = studentSnap.docs[0].data();
    const studentCourse = studentData.course;
  
    let courseProfesor = null;
    if (studentCourse === "601" || studentCourse === "602") {
        courseProfesor = "600";
    } else if (studentCourse === "701" || studentCourse === "702") {
        courseProfesor = "700";
    }
  
    if (!courseProfesor) {
        alert("Curso no válido");
        return;
    }
  
    const profesorQuery = query(
        collection(db, "users"),
        where("course", "==", courseProfesor.toString()),
        where("role", "==", "docente")
    );
    const profesorSnap = await getDocs(profesorQuery);
  
    if (profesorSnap.empty) {
        alert("No se encontraron profesores");
        return;
    }
  
    const profesorData = profesorSnap.docs[0].data();
  
    // Llenar datos en la tarjeta principal
    document.getElementById("nombreProfesor").textContent = profesorData.firstName + " " + profesorData.lastName;
    document.getElementById("gradoProfesor").textContent = (courseProfesor == "600") ? "Sexto" : "Séptimo";
  
    const fotoProfesor = profesorData.photoUrl || "https://cdn-icons-png.freepik.com/256/14024/14024680.png?semt=ais_hybrid";
    document.getElementById("fotoProfesor").src = fotoProfesor;
    
    // Configurar el modal con los datos completos
    document.getElementById("modal-teacher-name").textContent = profesorData.firstName + " " + profesorData.lastName;
    document.getElementById("modal-teacher-course").textContent = (courseProfesor == "600") ? "Sexto" : "Séptimo";
    document.getElementById("modal-teacher-description").textContent = profesorData.description || "No hay descripción disponible";
    document.getElementById("modal-teacher-role").textContent = "Docente";
    document.getElementById("modal-teacher-avatar").src = fotoProfesor;
}

// Agrega el manejo del modal
document.addEventListener("DOMContentLoaded", () => {
    cargarProfesor();
    cargarMensajes();
    
    // Obtener elementos del modal
    const modal = document.getElementById("teacher-modal");
    const btn = document.querySelector(".profile-button");
    const span = document.querySelector(".close-modal");
    
    // Cuando se hace clic en el botón, mostrar el modal
    btn.onclick = function() {
        modal.style.display = "block";
    }
    
    // Cuando se hace clic en la X, cerrar el modal
    span.onclick = function() {
        modal.style.display = "none";
    }
    
    // Cuando se hace clic fuera del modal, cerrarlo
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
});
    
  </script>
  <script>
    const openNoteButton = document.getElementById('open-note');
    const noteForm = document.getElementById('note-form');

    openNoteButton.addEventListener('click', () => {
        if (noteForm.style.display === 'none') {
            noteForm.style.display = 'flex';
        } else {
            noteForm.style.display = 'none';
        }
    });

    const sendMessageButton = document.getElementById('send-message-button');
    sendMessageButton.addEventListener('click', (e) => {
        e.preventDefault();
        const message = document.getElementById('student-message').value;
        if (message.trim() !== "") {
            alert('Mensaje enviado: ' + message);
            document.getElementById('student-message').value = "";
            noteForm.style.display = 'none';
        } else {
            alert('Por favor escribe un mensaje antes de enviar.');
        }
    });
</script>

</html>

<style>
    html, body {
        margin: 0;
        padding: 0;
        height: 100vh;
        width: 100vw;
        overflow: hidden;
        background-color: #FFFFF0;
        /* @apply w-screen h-screen m-0 p-0 overflow-hidden; */
    }

    .container {
        @apply flex h-screen bg-[#FFFFF0] w-full;
    }

    .menu {
        @apply w-[300px] h-full;
    }

    .information {
        @apply w-[1500px] flex-col h-full flex items-center justify-center;
    }   

    .section-title{
        @apply w-full h-[25%]  flex justify-center items-center;
    }

    .section-title >h2{
        @apply text-[#184D6D] text-[40px];
    }

    .teacher-profile {
    @apply w-full flex justify-center items-center ;
    }

    .teacher-card {
    @apply w-full max-w-[620px] bg-[#fefee2] rounded-[12px] flex items-center justify-between px-[16px] py-[8px] shadow-[0_4px_6px_rgba(0,0,0,0.1)] border border-[#cccccc40];
    }


    .avatar-wrapper {
        @apply bg-[#e9aa61] rounded-[50%] p-[8px] flex items-center justify-center;
    }

    .teacher-avatar {
        @apply rounded-[50%] w-[50px] h-[50px];
    }

    .teacher-details {
        @apply flex flex-col ml-[16px] flex-1;
    }

    .teacher-details h2 {
        @apply text-[#184D6D] text-[18px];
    }

    .teacher-details h3 {
        @apply text-[#538802] text-[14px];
    }

    .profile-button {
        @apply bg-[#538802] text-[#f3ebeb] px-[16px] py-[8px] rounded-[8px] hover:bg-[#406a01] transition hover:cursor-pointer;
    }

    .teacher-sections{
        @apply w-full h-[25%]  flex justify-center items-center mt-[25px];
    }

    .teacher-card-section{
        @apply w-[40%] h-[250px] bg-[#FDE0A3] rounded-[10px] flex flex-col items-center mt-[60px] p-[20px];
    }

    .teacher-card-section >h2{
        @apply text-[20px] text-[#184D6D] ;
    }

    .student-response{
        @apply w-full h-[25%] flex items-center justify-around;
    }

    .send-note{
        @apply w-[200px] h-[40px] bg-[#f4b860] rounded-[4px] text-[#140404] flex justify-center items-center gap-[8px]; 
    }

    .send-audio{
        @apply w-[200px] h-[40px] bg-[#538802] rounded-[4px] text-[#f3ebeb] flex justify-center items-center gap-[8px];
    }

    .note-form {
    @apply w-full flex flex-col items-center mt-[16px];
}

.textarea-message {
    @apply w-[300px] h-[100px] p-[8px] border border-[#d1d5dc] rounded-[6px] resize-none mb-[8px];
}

.submit-message {
    @apply bg-[#538802] text-[#fff] px-[16px] py-[8px] rounded-[6px] hover:bg-[#406a01] transition;
}

.mensajes-container {
        width: 100%;
        max-height: 300px;
        overflow-y: auto;
        padding: 10px;
        background: white;
        border-radius: 8px;
        margin-top: 10px;
    }

    .mensaje {
        padding: 12px;
        margin-bottom: 12px;
        background: #f8f9fa;
        border-radius: 6px;
        border-left: 3px solid #288b98;
    }

    .mensaje-cabecera {
        display: flex;
        justify-content: space-between;
        margin-bottom: 8px;
        font-size: 14px;
    }

    .mensaje-cabecera strong {
        color: #184D6D;
    }

    .mensaje-cabecera .fecha {
        color: #6c757d;
        font-size: 12px;
    }

    .mensaje-texto {
        color: #333;
        line-height: 1.5;
    }

    .loading, .no-messages {
        text-align: center;
        padding: 20px;
        color: #6c757d;
    }

    .error {
        text-align: center;
        padding: 20px;
        color: #dc3545;
    }

    .error button {
        background: #288b98;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        margin-top: 5px;
        cursor: pointer;
    }


    .modal {
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
}

.modal-content {
    background-color: #FFFFF0;
    margin: 10% auto;
    padding: 20px;
    border-radius: 10px;
    width: 50%;
    max-width: 500px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.modal-header {
    display: flex;
    align-items: center;
    margin-bottom: 20px;
    border-bottom: 1px solid #ddd;
    padding-bottom: 15px;
}

.modal-avatar {
    width: 80px;
    height: 80px;
    border-radius: 50%;
    object-fit: cover;
    margin-right: 20px;
}

.modal-title h2 {
    color: #184D6D;
    margin: 0;
    font-size: 24px;
}

.modal-title h3 {
    color: #538802;
    margin: 5px 0 0 0;
    font-size: 18px;
}

.modal-body {
    padding: 10px 0;
}

.modal-section {
    margin-bottom: 15px;
}

.modal-section h4 {
    color: #184D6D;
    margin-bottom: 5px;
    font-size: 16px;
}

.modal-section p {
    color: #333;
    margin: 0;
    font-size: 14px;
}

.close-modal {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close-modal:hover {
    color: black;
}
</style>