---
// 1) Recibimos la prop `percent` (y le damos un default)
const { percent = 0 } = Astro.props;
// calculamos de una vez la circunferencia:
const circumference = 2 * Math.PI * 55;
---
<!-- 2) Inyectamos Alpine desde CDN (puedes moverlo al layout si lo vas
             a usar en muchos componentes) -->
<script defer src="https://unpkg.com/alpinejs@3.2.4/dist/cdn.min.js"></script>

<div class="container-progress">
  <div class="progress-wrapper">
    <!-- 3) Aquí interpolamos `percent` y `circumference` en x-data -->
    <div
      class="progress-circle"
      x-data={`
        { 
          percent: ${percent}, 
          circumference: ${circumference} 
        }
      `}
    >
      <svg class="transform -rotate-90 w-full h-full" viewBox="0 0 150 150">
        <circle
          cx="75" cy="75" r="55"
          stroke="currentColor"
          stroke-width="14"
          fill="transparent"
          class="text-[#f8dcb0]"
        />
        <circle
          cx="75" cy="75" r="55"
          stroke="currentColor"
          stroke-width="14"
          fill="transparent"
          :stroke-dasharray="circumference"
          :stroke-dashoffset="circumference - (percent/100)*circumference"
          class="text-[#2c2c2c] transition-all duration-500 ease-out"
        />
      </svg>
      <span
        class="absolute text-lg font-semibold text-[#2c2c2c]"
        x-text="`${percent}%`"
      ></span>
    </div>
  </div>

  <div class="progress-info">
    <!-- slot para que puedas pasar título, subtítulo, etc. -->
    <slot />
  </div>
</div>

<style>
  .container-progress {
    @apply bg-[#f5f5dc] w-[280px] h-[250px];
  }
  .progress-wrapper {
    @apply h-[50%] justify-center items-center flex;
  }
  .progress-circle {
    @apply relative rounded-full h-[120px] w-[125px] flex items-center justify-center;
  }
  .progress-info {
    @apply h-[50%];
  }
</style>



