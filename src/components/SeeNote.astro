---
const { noteId } = Astro.props;
---
<div id="see-note" class="see-note-container" data-note-id={noteId}>
    <header class="see-note-header">
        <h2 class="see-note-title">Tu Nota</h2>
        <p class="see-note-date" id="seeDate">Cargando fecha…</p>
    </header>

    <div class="see-note-content">
        <div class="see-note-section">
            <h3 class="section-title">&iquest;Qu&eacute; aprend&iacute;?</h3>
            <p id="seeLearning" class="section-text"></p>
        </div>

        <div class="see-note-section">
            <h3 class="section-title">Emoci&oacute;n</h3>
            <p id="seeEmotion" class="section-text"></p>
        </div>

        <div class="see-note-section">
            <h3 class="section-title">Logro</h3>
            <p id="seeAchievement" class="section-text"></p>
        </div>

        <div class="see-note-section">
            <h3 class="section-title">Pensamientos</h3>
            <p id="seeThoughts" class="section-text"></p>
        </div>

        <!-- <div id="seeDrawingSection" class="see-note-section" style="display:none">
            <h3 class="section-title">Dibujo</h3>
            <p id="seeDrawing" class="section-text"></p>
        </div> -->
    </div>
    <!-- <script is:inline>
        document.addEventListener('DOMContentLoaded', async () => {
            const noteContainer = document.getElementById('see-note');
            const noteId = noteContainer.dataset.noteId;
            const userCode = localStorage.getItem('codigoEstudiante');
            
            if (!noteId || !userCode) {
                console.error("Missing noteId or userCode");
                return;
            }
    
            try {
                // Importaciones compatibles con Astro
                const { db } = await import("/src/scripts/firebaseConfig.js");
                const { doc, getDoc } = await import("https://www.gstatic.com/firebasejs/9.6.10/firebase-firestore.js");
                
                const noteRef = doc(db, "users", userCode, "notes", noteId);
                const noteSnap = await getDoc(noteRef);
    
                if (noteSnap.exists()) {
                    const note = noteSnap.data();
                    // Formatear fecha legible
                    const fechaLegible = new Date(note.fecha).toLocaleDateString('es-ES', {
                        day: 'numeric',
                        month: 'long',
                        year: 'numeric'
                    });
                    
                    // Asignar datos a los elementos
                    document.getElementById('seeDate').textContent = fechaLegible;
                    document.getElementById('seeLearning').textContent = note.aprendizaje || "Sin contenido";
                    document.getElementById('seeEmotion').textContent = note.emocion || "Sin especificar";
                    document.getElementById('seeAchievement').textContent = note.logro || "Sin logro";
                    document.getElementById('seeThoughts').textContent = note.pensamientos || "Sin pensamientos";
                } else {
                    console.error("Documento no encontrado en Firestore");
                }
            } catch (error) {
                console.error("Error loading note:", error);
                noteContainer.innerHTML = `<p class="error">Error al cargar la nota. Recarga la página.</p>`;
            }
        });
    </script> -->
    <script is:inline>
        document.addEventListener('DOMContentLoaded', async () => {
            const formatDate = (dateString) => {
                try {
                    // Si es Timestamp de Firestore (object)
                    if (typeof dateString === 'object' && dateString.toDate) {
                        return dateString.toDate().toLocaleDateString('es-ES', {
                            day: '2-digit',
                            month: 'long',
                            year: 'numeric'
                        });
                    }
                    // Si es string ISO (ej: "2025-05-03T03:29:23.762Z")
                    return new Date(dateString).toLocaleDateString('es-ES', {
                        day: '2-digit',
                        month: 'long',
                        year: 'numeric'
                    });
                } catch (e) {
                    console.error("Error formateando fecha:", dateString, e);
                    return "Fecha no disponible";
                }
            };
    
            try {
                const noteId = document.getElementById('see-note').dataset.noteId;
                const userCode = localStorage.getItem('codigoEstudiante');
                const { db } = await import("/src/scripts/firebaseConfig.js");
                const { doc, getDoc } = await import("firebase/firestore");
    
                const noteRef = doc(db, "users", userCode, "notes", noteId);
                const noteSnap = await getDoc(noteRef);
    
                if (noteSnap.exists()) {
                    const note = noteSnap.data();
                    document.getElementById('seeDate').textContent = formatDate(note.fecha);
                    // ... (otros campos)
                }
            } catch (error) {
                console.error("Error:", error);
            }
        });
    </script>
</div>

<style>
    .see-note-container {
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
        padding: 2rem;
        max-width: 800px;
        width: 100%;
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .see-note-header {
        text-align: center;
        border-bottom: 2px solid #ef8535;
        padding-bottom: 0.5rem;
        margin-bottom: 1rem;
    }

    .see-note-title {
        font-size: 2rem;
        font-weight: 700;
        color: #184d6d;
        margin: 0;
    }

    .see-note-date {
        font-size: 0.875rem;
        color: #6b7280;
        margin-top: 0.25rem;
    }

    .see-note-content {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.5rem;
    }

    .see-note-section {
        background-color: #f9fafb;
        border-left: 4px solid #ef8535;
        border-radius: 6px;
        padding: 1rem;
    }

    .section-title {
        font-size: 1.125rem;
        font-weight: 600;
        color: #333;
        margin: 0 0 0.5rem 0;
    }

    .section-text {
        margin: 0;
        font-size: 1rem;
        line-height: 1.5;
        color: #444;
    }
</style>





